SOLID PRINCIPLES
IT'S STANDS FOR 
1. Single Responsibility Principle (SRP)
2. Open/Closed Principle (OCP)
3. Liskov Substitution Principle (LSP)
4. Interface Segregation Principle (ISP)
5. Dependency Inversion Principle (DIP)

EXAMPLE PROGRAMS FOR SOILD REFERENCE
https://www.c-sharpcorner.com/article/mastering-solid-principles-in-c-sharp-with-real-time-examples/
---------------------------------------------------------------------------------------------------------------
1.Single Responsibility Principle (SRP)

A class should have only one reason to change, meaning it should have only one responsibility

2. Open/Closed Principle (OCP)

open for extension but closed for modification.

3. Liskov Substitution Principle (LSP)

Subtypes must be substitutable for their base types without altering the correctness of the program.

4. Interface Segregation Principle (ISP)

No client should be forced to depend on methods it does not use.

5. Dependency Inversion Principle (DIP)

High-level modules should not depend on low-level modules. Both should depend on abstractions. Abstractions should not depend on details. Details should depend on abstractions.

